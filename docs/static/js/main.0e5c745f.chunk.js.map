{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/services.jsx","components/gallery.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","data","title","title_2","paragraph","About","src","alt","Why","map","d","i","Why2","Services","icon","name","text","Gallery","useState","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","thumb","images","obj","replace","openImageViewer","useCallback","index","onClick","backgroundStyle","zIndex","currentIndex","onClose","Footer","rel","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wmHAAaA,EAAa,SAACC,GACzB,OACE,qBAAKC,GAAG,OAAOC,UAAU,yCAAzB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,yBACEC,KAAK,SACLD,UAAU,0BACVE,cAAY,WACZC,cAAY,gCAJd,UAMG,IACD,sBAAMH,UAAU,UAAhB,+BAAmD,IACnD,sBAAMA,UAAU,aAAmB,IACnC,sBAAMA,UAAU,aAAmB,IACnC,sBAAMA,UAAU,aAAmB,OAErC,mBAAGA,UAAU,2BAA2BI,KAAK,YAA7C,wBAEK,OAGP,qBACEJ,UAAU,2BACVD,GAAG,+BAFL,SAIE,qBAAIC,UAAU,8BAAd,UACE,6BACE,mBAAGI,KAAK,SAASJ,UAAU,cAA3B,qBAIF,6BACE,mBAAGI,KAAK,YAAYJ,UAAU,cAA9B,wBAIF,6BACE,mBAAGI,KAAK,aAAaJ,UAAU,cAA/B,kCCpCDK,EAAS,SAACP,GACrB,OACE,wBAAQC,GAAG,SAAX,SACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SAEE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,sCAAf,UACE,+BACGF,EAAMQ,KAAOR,EAAMQ,KAAKC,MAAQ,UAAW,IAC5C,sBAAMP,UAAU,UAAhB,SACCF,EAAMQ,KAAOR,EAAMQ,KAAKE,QAAU,YAEnC,4BAEF,4BAAIV,EAAMQ,KAAOR,EAAMQ,KAAKG,UAAY,YACxC,mBACEL,KAAK,SACLJ,UAAU,oCAFZ,wBAKK,kBCxBRU,EAAQ,SAACZ,GACpB,OACE,qBAAKC,GAAG,QAAR,SACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACG,IACD,qBAAKW,IAAI,gBAAgBX,UAAU,iBAAiBY,IAAI,KAAM,OAEhE,qBAAKZ,UAAU,qBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0CACA,4BAAIF,EAAMQ,KAAOR,EAAMQ,KAAKG,UAAY,eACxC,gDACA,sBAAKT,UAAU,aAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,6BACGF,EAAMQ,KACHR,EAAMQ,KAAKO,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACjB,6BAAuBD,GAAvB,UAAYA,EAAZ,YAAiBC,OAEnB,cAGR,qBAAKhB,UAAU,8BAAf,SACE,6BACGF,EAAMQ,KACHR,EAAMQ,KAAKW,KAAKH,KAAI,SAACC,EAAGC,GAAJ,OAClB,mCAAwBD,IAAxB,UAAYA,EAAZ,YAAiBC,OAEnB,8BC9BXE,EAAW,SAACpB,GACvB,OACE,qBAAKC,GAAG,WAAWC,UAAU,cAA7B,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,gDAEF,qBAAKA,UAAU,MAAf,SACGF,EAAMQ,KACHR,EAAMQ,KAAKQ,KAAI,SAACC,EAAGC,GAAJ,OACb,sBAA4BhB,UAAU,WAAtC,UACG,IACD,mBAAGA,UAAWe,EAAEI,OAChB,sBAAKnB,UAAU,eAAf,UACE,6BAAKe,EAAEK,OACP,4BAAIL,EAAEM,YALV,UAAaN,EAAEK,KAAf,YAAuBJ,OASzB,kB,gBChBDM,EAAU,SAAAxB,GAAU,IAAD,EACUyB,mBAAS,GADnB,mBACvBC,EADuB,KACTC,EADS,OAEUF,oBAAS,GAFnB,mBAEvBG,EAFuB,KAETC,EAFS,KAIxBrB,EAAO,CACX,CAAEsB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,gBAC9C,CAAEqB,MAAO,6BAA8BrB,MAAO,iBAG1CsB,EAASvB,EAAKQ,KAAI,SAAAgB,GAAG,OAAIA,EAAIF,MAAMG,QAAQ,SAAU,aAErDC,EAAkBC,uBAAY,SAAAC,GAClCT,EAAgBS,GAChBP,GAAgB,KACf,IAOH,OACE,qBAAK5B,GAAG,YAAYC,UAAU,cAA9B,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,yCACA,oHAEF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACGM,EAAKQ,KAAI,WAAmBoB,GAAnB,IAAG3B,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,MAAV,OACR,qBAAiBO,QAAS,kBAAMH,EAAgBE,IAAQlC,UAAU,6BAAlE,SACE,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,6BAAKO,MAEP,qBAAKI,IAAKiB,EAAO5B,UAAU,iBAAiBY,IAAI,kBAAmB,UAN/DsB,QAabR,GACC,cAAC,IAAD,CACEf,IAAKkB,EACLO,gBAAiB,CAAEC,OAAQ,OAC3BC,aAAcd,EACde,QAjCa,WACvBd,EAAgB,GAChBE,GAAgB,eC5BPa,EAAS,SAAC1C,GAErB,OACE,8BACE,qBAAKC,GAAG,SAAR,SACE,qBAAKC,UAAU,wBAAf,SACE,0CACc,IACZ,mBAAGI,KAAK,2CAA2CqC,IAAI,WAAvD,uBAFF,IAIQ,IAJR,aAKa,IACX,mBAAGrC,KAAK,iCAAR,uC,gBCyBGsC,GAzBO,I,OAAIC,GAAa,eAAgB,CACrDC,MAAO,IACPC,iBAAiB,IAGP,WAAO,IAAD,EAC8BtB,mBAAS,IADvC,mBACTuB,EADS,KACQC,EADR,KAMhB,OAJAC,qBAAU,WACRD,EAAmBE,KAClB,IAGD,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ3C,KAAMwC,EAAgBzC,SAE9B,cAAC,EAAD,CAAOC,KAAMwC,EAAgBpC,QAC7B,cAAC,EAAD,CAAUJ,KAAMwC,EAAgB5B,WAChC,cAAC,EAAD,IAEA,cAAC,EAAD,SCpBcgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0e5c745f.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            InstaSites\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li>\n            <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","// import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n          \n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}{' '}\n                  <span className=\"title_2\">\n                  {props.data ? props.data.title_2 : 'Loading'}\n                  </span>\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#about'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id='about'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xs-12 col-md-6'>\n            {' '}\n            <img src='img/about.jpg' className='img-responsive' alt='' />{' '}\n          </div>\n          <div className='col-xs-12 col-md-6'>\n            <div className='about-text'>\n              <h2>About Us</h2>\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\n              <h3>Why Choose Us?</h3>\n              <div className='list-style'>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Services = (props) => {\n  return (\n    <div id='services' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Our Services</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <div className='service-desc'>\n                    <h3>{d.name}</h3>\n                    <p>{d.text}</p>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from \"react\";\nimport ImageViewer from \"react-simple-image-viewer\";\n\nexport const Gallery = props => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const data = [\n    { thumb: \"img/portfolio/01-small.jpg\", title: \"Lorem Ipsum1\" },\n    { thumb: \"img/portfolio/02-small.jpg\", title: \"Lorem Ipsum2\" },\n    { thumb: \"img/portfolio/03-small.jpg\", title: \"Lorem Ipsum3\" },\n    { thumb: \"img/portfolio/04-small.jpg\", title: \"Lorem Ipsum4\" },\n    { thumb: \"img/portfolio/05-small.jpg\", title: \"Lorem Ipsum5\" },\n    { thumb: \"img/portfolio/06-small.jpg\", title: \"Lorem Ipsum6\" },\n    { thumb: \"img/portfolio/07-small.jpg\", title: \"Lorem Ipsum7\" },\n    { thumb: \"img/portfolio/08-small.jpg\", title: \"Lorem Ipsum8\" },\n    { thumb: \"img/portfolio/09-small.jpg\", title: \"Lorem Ipsum9\" }\n  ];\n\n  const images = data.map(obj => obj.thumb.replace(\"-small\", \"-large\"));\n\n  const openImageViewer = useCallback(index => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n\n  return (\n    <div id=\"portfolio\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Gallery</h2>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed dapibus leonec.</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"portfolio-items\">\n            {data.map(({ title, thumb }, index) => (\n              <div key={index} onClick={() => openImageViewer(index)} className=\"col-sm-6 col-md-4 col-lg-4\">\n                <div className=\"portfolio-item cursor\">\n                  <div className=\"hover-bg\">\n                    <div className=\"hover-text\">\n                      <h4>{title}</h4>\n                    </div>\n                    <img src={thumb} className=\"img-responsive\" alt=\"Project Title\" />{\" \"}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {isViewerOpen && (\n            <ImageViewer\n              src={images}\n              backgroundStyle={{ zIndex: 99999 }}\n              currentIndex={currentImage}\n              onClose={closeImageViewer}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Footer = (props) => {\n  \n  return (\n    <div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2021{' '}\n            <a href='https://www.instagram.com/instasites.io/' rel='nofollow'>\n              Instagram\n            </a> {' '}\n            Feel free {' '}\n            <a href='mailto:instasites.io@gmail.com'>\n            to get in touch\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\n// import { Features } from './components/features'\nimport { About } from './components/about'\nimport { Services } from './components/services'\nimport { Gallery } from './components/gallery'\n// import { Testimonials } from './components/testimonials'\nimport { Footer } from './components/footer'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      {/* <Features data={landingPageData.Features} /> */}\n      <About data={landingPageData.About} />\n      <Services data={landingPageData.Services} />\n      <Gallery />\n      {/* <Testimonials data={landingPageData.Testimonials} /> */}\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}